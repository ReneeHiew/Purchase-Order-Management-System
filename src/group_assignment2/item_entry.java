/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package group_assignment2;

import group_assignment2.ItemEntry;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AVITA
 */
public class item_entry extends javax.swing.JFrame {
    private DefaultTableModel ieModel = new DefaultTableModel();
    private String[] ieColumns = {"Item Code","Item Name","Unit Price","Supplier ID"};
    private String itemEntriesFilePath = "C:\\Users\\60125\\Documents\\OODJ Group Assignment\\itemEntry.txt";
    private String itemEntriesTempFilePath = "C:\\Users\\60125\\Documents\\OODJ Group Assignment\\tempItemEntry.txt";
    private String header = "Item Code , Item Name , Unit Price , Supplier ID , Quantity";
    private int row = -1;
    private String userID;
    private String[] itemIDs = {};
    /**
     * Creates new form item_entry
     * @throws java.io.FileNotFoundException
     */
    //No parameter constructor
    public item_entry() throws FileNotFoundException{
        initComponents();
        ieModel.setColumnIdentifiers(ieColumns);
        
        File iefile = new File(itemEntriesFilePath);
        Scanner sc = new Scanner(iefile);
        
        if(sc.hasNextLine())sc.nextLine();
        
        while(sc.hasNextLine()){
            String rowItemEntries = sc.nextLine();
            String[] partsItemEntries = rowItemEntries.split("[/]+");
            ieModel.addRow(partsItemEntries);
            itemIDs = Arrays.copyOf(itemIDs, itemIDs.length + 1);
            itemIDs [itemIDs.length - 1] = partsItemEntries[0];
        }
        sc.close();
    }
    
    //With parameter constructor
    public item_entry(String userID) throws FileNotFoundException {
        initComponents();
        ieModel.setColumnIdentifiers(ieColumns);
        
        this.userID = userID;
        
        File iefile = new File(itemEntriesFilePath);
        Scanner sc = new Scanner(iefile);
        
        if(sc.hasNextLine())sc.nextLine();
        
        while(sc.hasNextLine()){
            String rowItemEntries = sc.nextLine();
            String[] partsItemEntries = rowItemEntries.split("[/]+");
            ieModel.addRow(partsItemEntries);
            itemIDs = Arrays.copyOf(itemIDs, itemIDs.length + 1);
            itemIDs [itemIDs.length - 1] = partsItemEntries[0];
        }
        sc.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_itemCode = new javax.swing.JLabel();
        lbl_unitPrice = new javax.swing.JLabel();
        lbl_itemName = new javax.swing.JLabel();
        lbl_supplierID = new javax.swing.JLabel();
        lbl_itemEntry = new javax.swing.JLabel();
        txt_itemCode = new javax.swing.JTextField();
        txt_supplierID = new javax.swing.JTextField();
        txt_unitPrice = new javax.swing.JTextField();
        txt_itemName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_itemEntry = new javax.swing.JTable();
        btn_addItemEntry = new javax.swing.JButton();
        btn_editItemEntry = new javax.swing.JButton();
        btn_deleteItemEntry = new javax.swing.JButton();
        btnMainMenu = new javax.swing.JButton();
        lblCompany = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_itemCode.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbl_itemCode.setText("Item Code:");

        lbl_unitPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbl_unitPrice.setText("Unit Price:");

        lbl_itemName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbl_itemName.setText("Item Name:");

        lbl_supplierID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbl_supplierID.setText("Supplier ID:");

        lbl_itemEntry.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbl_itemEntry.setText("Item Entry");

        tbl_itemEntry.setModel(ieModel);
        tbl_itemEntry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbl_itemEntryMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_itemEntry);

        btn_addItemEntry.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_addItemEntry.setText("Add");
        btn_addItemEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addItemEntryActionPerformed(evt);
            }
        });

        btn_editItemEntry.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_editItemEntry.setText("Edit");
        btn_editItemEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editItemEntryActionPerformed(evt);
            }
        });

        btn_deleteItemEntry.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_deleteItemEntry.setText("Delete");
        btn_deleteItemEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteItemEntryActionPerformed(evt);
            }
        });

        btnMainMenu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMainMenu.setText("Main Menu");
        btnMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainMenuActionPerformed(evt);
            }
        });

        lblCompany.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCompany.setText("SIGMA SDN BHD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnMainMenu)
                        .addGap(104, 104, 104)
                        .addComponent(lblCompany)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(btn_addItemEntry)
                        .addGap(58, 58, 58)
                        .addComponent(btn_editItemEntry)
                        .addGap(60, 60, 60)
                        .addComponent(btn_deleteItemEntry))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_unitPrice)
                            .addComponent(lbl_supplierID)
                            .addComponent(lbl_itemCode)
                            .addComponent(lbl_itemName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_supplierID, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_unitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(154, 154, 154)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_itemEntry)
                .addGap(223, 223, 223))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnMainMenu)
                    .addComponent(lblCompany))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(lbl_itemEntry)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_itemCode)
                    .addComponent(txt_itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_itemName)
                    .addComponent(txt_itemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_unitPrice)
                    .addComponent(txt_unitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_supplierID)
                    .addComponent(txt_supplierID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_addItemEntry)
                    .addComponent(btn_editItemEntry)
                    .addComponent(btn_deleteItemEntry))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addItemEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addItemEntryActionPerformed

        String itemCode = txt_itemCode.getText();
        String itemName = txt_itemName.getText();
        String unitPrice = txt_unitPrice.getText();
        String supplierID = txt_supplierID.getText();
        
        boolean idDuplication = false;
        for (String ID : itemIDs){
            if(itemCode.equals(ID)){
                idDuplication = true;
                break;
            }
            else{
                idDuplication = false;
            }
        }
        
        if(row>-1){
            JOptionPane.showMessageDialog(null, "Data existed. Please Try Again", "Data Record Found", JOptionPane.WARNING_MESSAGE);
            tbl_itemEntry.getSelectionModel().clearSelection();
            row = -1;
            
            txt_itemCode.setText("");
            txt_itemName.setText("");
            txt_unitPrice.setText("");
            txt_supplierID.setText(""); 
        }
        else if("".equals(itemCode) || "".equals(itemName) || "".equals(unitPrice) || "".equals(supplierID)){
            JOptionPane.showMessageDialog(null, "Please ensure all data are filled.", "Empty Fields Detacted", JOptionPane.WARNING_MESSAGE);
        }
        else{
            if(!idDuplication){
               try {
                String[] newItemEntry = {itemCode,itemName,unitPrice,supplierID,"0"};
                ieModel.addRow(newItemEntry);
                
                txt_itemCode.setText("");
                txt_itemName.setText("");
                txt_unitPrice.setText("");
                txt_supplierID.setText("");
                
                ItemEntry add = new ItemEntry(newItemEntry, itemEntriesFilePath);
                add.add();
                } catch (IOException ex) {
                    Logger.getLogger(item_entry.class.getName()).log(Level.SEVERE, null, ex);
                } 
            } else{
                JOptionPane.showMessageDialog(null, "Item ID already exist.");
            }
        }
    }//GEN-LAST:event_btn_addItemEntryActionPerformed

    private void tbl_itemEntryMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_itemEntryMouseReleased
        // TODO add your handling code here:
        row = tbl_itemEntry.getSelectedRow();
        String itemCode = String.valueOf(ieModel.getValueAt(row, 0));
        String itemName = String.valueOf(ieModel.getValueAt(row, 1));
        String unitPrice = String.valueOf(ieModel.getValueAt(row, 2));
        String supplierID = String.valueOf(ieModel.getValueAt(row, 3));
        
        txt_itemCode.setText(itemCode);
        txt_itemName.setText(itemName);
        txt_unitPrice.setText(unitPrice);
        txt_supplierID.setText(supplierID);
    }//GEN-LAST:event_tbl_itemEntryMouseReleased

    private void btn_deleteItemEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteItemEntryActionPerformed

        if(row == -1){
            JOptionPane.showMessageDialog(null, "Please select data row to delete.", "No Item Selected", JOptionPane.WARNING_MESSAGE);
        }
        else{
            ieModel.removeRow(row);
            tbl_itemEntry.getSelectionModel().clearSelection();
            
            txt_itemCode.setText("");
            txt_itemName.setText("");
            txt_unitPrice.setText("");
            txt_supplierID.setText("");
            
            ItemEntry dlt = new ItemEntry(row, itemEntriesFilePath, itemEntriesTempFilePath, header);
            try {
                if (dlt.delete()){
                    JOptionPane.showMessageDialog(null, "Item Entry Deleted.","Successfully Deleted Item Entry", JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Error Deleting Selected Row", "Error Detacted", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException ex) {
                Logger.getLogger(item_entry.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            row = -1;
        }
    }//GEN-LAST:event_btn_deleteItemEntryActionPerformed

    private void btn_editItemEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editItemEntryActionPerformed
        // TODO add your handling code here:
        if(row == -1){
            JOptionPane.showMessageDialog(null, "Please select data row to edit.", "No Item Selected", JOptionPane.WARNING_MESSAGE);

        }
        else{
            String itemCode = txt_itemCode.getText();
            String itemName = txt_itemName.getText();
            String unitPrice = txt_unitPrice.getText();
            String supplierID = txt_supplierID.getText();
            
            String[] newEdit = {itemCode,itemName,unitPrice,supplierID};

            ieModel.setValueAt(itemCode, row, 0);
            ieModel.setValueAt(itemName, row, 1);
            ieModel.setValueAt(unitPrice, row, 2);
            ieModel.setValueAt(supplierID, row, 3);
            
            ItemEntry edit = new ItemEntry(row, newEdit, itemEntriesFilePath, itemEntriesTempFilePath, header);
            
            try {
                if (edit.edit()) JOptionPane.showMessageDialog(null, "Changes Made Saved.", "Data Successfully Edited", JOptionPane.INFORMATION_MESSAGE);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(item_entry.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(item_entry.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            tbl_itemEntry.getSelectionModel().clearSelection();
            
            txt_itemCode.setText("");
            txt_itemName.setText("");
            txt_unitPrice.setText("");
            txt_supplierID.setText(""); 
            
            row = -1;
        }
    }//GEN-LAST:event_btn_editItemEntryActionPerformed

    private void btnMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainMenuActionPerformed
        SM_MainPage mainPage = new SM_MainPage(userID);
        mainPage.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnMainMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(item_entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(item_entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(item_entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(item_entry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new item_entry().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(item_entry.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMainMenu;
    private javax.swing.JButton btn_addItemEntry;
    private javax.swing.JButton btn_deleteItemEntry;
    private javax.swing.JButton btn_editItemEntry;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCompany;
    private javax.swing.JLabel lbl_itemCode;
    private javax.swing.JLabel lbl_itemEntry;
    private javax.swing.JLabel lbl_itemName;
    private javax.swing.JLabel lbl_supplierID;
    private javax.swing.JLabel lbl_unitPrice;
    private javax.swing.JTable tbl_itemEntry;
    private javax.swing.JTextField txt_itemCode;
    private javax.swing.JTextField txt_itemName;
    private javax.swing.JTextField txt_supplierID;
    private javax.swing.JTextField txt_unitPrice;
    // End of variables declaration//GEN-END:variables
}
